name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

env:
  PYTHONPATH: src
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train model and capture RMSE
        id: train
        run: |
          python - <<'PY'
          from pathlib import Path
          from risk_service.data import load_dataset
          from risk_service.model import train_and_eval_models

          X, y = load_dataset(as_frame=True)
          rmse, _ = train_and_eval_models(X, y)
          Path("metrics.txt").write_text(f"{rmse:.2f}\n")
          PY
          echo "rmse=$(cat metrics.txt)" >> $GITHUB_OUTPUT

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: model-baseline
          path: artifacts/model_baseline.pkl

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:${{ github.ref_name }} .

      - name: Smoke test container
        run: |
          set -euo pipefail
          container_id=$(docker run -d -p 8000:8000 $IMAGE_NAME:${{ github.ref_name }})
          trap "docker stop $container_id" EXIT
          sleep 5
          curl --fail --silent http://localhost:8000/health
          curl --fail --silent -X POST http://localhost:8000/predict \
            -H 'Content-Type: application/json' \
            -d '{"age":0.02,"sex":-0.044,"bmi":0.06,"bp":-0.03,"s1":-0.02,"s2":0.03,"s3":-0.02,"s4":0.02,"s5":0.02,"s6":-0.001}'

      - name: Push image
        run: docker push $IMAGE_NAME:${{ github.ref_name }}

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: |
            ## Metrics
            - RMSE: ${{ steps.train.outputs.rmse }}

            ## Changes
            - Baseline release with StandardScaler + LinearRegression model (v0.1).
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
